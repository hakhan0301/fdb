generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model BlogPost {
  id        Int      @id @default(autoincrement())
  type      String   @default("TEXT")
  text      String
  createdAt DateTime @default(now())

  author User   @relation("author", fields: [userId], references: [id])
  userId String

  likes    User[]    @relation("likes")
  comments Comment[]
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  blogs      BlogPost[] @relation("author")
  likedBlogs BlogPost[] @relation("likes")
  comments   Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())

  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  blogPostId Int
  BlogPost   BlogPost? @relation(fields: [blogPostId], references: [id])
}

// -----------------------------auto--------------------------------

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
